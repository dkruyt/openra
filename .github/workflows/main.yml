name: Check for new OpenRA release and build docker image
on:
  schedule:
    - cron: '0 0 * * *' # Runs every day at midnight
  workflow_dispatch:
    inputs:
      version:
        description: 'OpenRA version to build'
        required: false
        default: ''

jobs:
  check-release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Get OpenRA version from input or latest release
      id: version
      run: |
        if [ "${{ github.event.inputs.version }}" != "" ]; then
          echo "OPENRA_RELEASE_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
        else
          # Your current code to retrieve the latest version
          OPENRA_RELEASE_VERSION=$(curl --silent "https://api.github.com/repos/OpenRA/OpenRA/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          echo "OPENRA_RELEASE_VERSION=$OPENRA_RELEASE_VERSION" >> $GITHUB_ENV
        fi
       
    - name: Check if versions match
      id: check
      run: |
        if [ "$OPENRA_RELEASE_VERSION" != "$(cat version.txt)" ]; then
            echo "NEW_RELEASE=true" >> $GITHUB_ENV
        fi

    - name: Login to GitHub Container Registry
      if: env.NEW_RELEASE == 'true'
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      if: env.NEW_RELEASE == 'true'
      uses: docker/setup-buildx-action@v1

    - name: Build and push Docker image if new release
      if: env.NEW_RELEASE == 'true'
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ghcr.io/${{ github.repository }}:v${{ env.OPENRA_RELEASE_VERSION }}
        build-args: OPENRA_RELEASE_VERSION=${{ env.OPENRA_RELEASE_VERSION }} # pass the release version as build-arg to docker build
        platforms: linux/amd64,linux/arm64,linux/arm/v7 # the platforms you want to target

    - name: Commit changes
      if: env.NEW_RELEASE == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add version.txt
        git commit -m "New OpenRA release $OPENRA_RELEASE_VERSION detected, starting docker image build"
        git push